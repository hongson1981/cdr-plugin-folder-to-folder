version:  '3.3'
services:
  # Jupyter
  jupyter:
      image: cdr_plugin_folder_to_folder_notebooks
      build:
        dockerfile: ${PWD}/jupyter/Dockerfile
        context: ${PWD}/jupyter
      volumes:
        - ${PWD}/jupyter/notebooks:/home/jovyan/work
        - ${PWD}/test_data:/home/jovyan/test_data
        - ${HOST_HD1_LOCATION}:/home/jovyan/data/hd1
        - ${HOST_HD2_LOCATION}:/home/jovyan/data/hd2
        - ${HOST_HD3_LOCATION}:/home/jovyan/data/hd3
      ports:
        - 8888:8888
      container_name: jupyter_notebook
      restart: always
      command: "start-notebook.sh \
                 --NotebookApp.token=${ACCESS_TOKEN}"

  # Voila (Viewer for Jupyter pages)
  voila:
      image: cdr_plugin_folder_to_folder_notebooks
      volumes:
        - ${PWD}/jupyter/notebooks:/home/jovyan/work
      ports:
        - 8866:8866
      container_name: jupyter_voila
      restart: always
      command: "voila --Voila.tornado_settings=\"{'headers':{'Content-Security-Policy': 'frame-ancestors http://localhost:*'}}\" "
      depends_on:
        - "jupyter"

# Fast API

  api:
      image: cdr_plugin_folder_to_folder
      build:
        dockerfile: ${PWD}/cdr_plugin_folder_to_folder/Dockerfile
        context: ${PWD}
      volumes:
        - ${PWD}/cdr_plugin_folder_to_folder:/app/cdr_plugin_folder_to_folder     # needed during local development (to update code inside container on local code changes)
        - ${PWD}/test_data:/app/test_data
        - ${HOST_HD1_LOCATION}:${HD1_LOCATION}
        - ${HOST_HD2_LOCATION}:${HD2_LOCATION}
        - ${HOST_HD3_LOCATION}:${HD3_LOCATION}
      ports:
        - 8880:8880
      depends_on:
        es01:
          condition: service_healthy
      restart: always

  # Docs
  docs:
    image: cdr_plugin_folder_to_folder_docs
    build:
      dockerfile: ${PWD}/docs/Dockerfile
      context: ${PWD}/docs
    volumes:
      - ${PWD}/docs/site:/src/site
    ports:
      - 1313:1313
    restart: always

  # Elastic and Kibana

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - logger.level=WARN
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5

    restart: always

  kib01:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      #- logger.level=WARN
      #- logging.verbose=false
      #- logging.level=WARN
      - ELASTICSEARCH_URL=http://es01:9200
      - ELASTICSEARCH_HOSTS=["http://es01:9200"]
      - LOGGING_QUIET=true
    restart: always

  # minio

  minio:
    image: minio/minio:latest
    volumes:
      - ${HOST_MINIO_LOCATION}:/data
    ports:
      - 9000:9000
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: ${ACCESS_TOKEN}
    command: server /data
    restart: always


  # docker logs (using file beat)

#  filebeat:
#    image: docker.elastic.co/beats/filebeat:7.12.0
#    user: root
#    volumes:
#       note: filebeat.yml changed location to /infra/docker-compose/filebeat.yml
#      - ${PWD}/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      - /var/run/docker.sock:/var/run/docker.sock
