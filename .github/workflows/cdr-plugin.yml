# This is a workflow to build AMI with ICAP server

name: cdr-plugin
env:
  AWS_DEFAULT_REGION: eu-west-1
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      gw_sdk_address:
        description: IP address of GW SDK
        default: "54.246.71.220"
        required: true
      create_ova:
        description: Create OVA
        default: "true"
        required: true
  push:
    branches: 
     - docker-compose-extends
    paths:
      - 'kubernetes'
      - 'cdr_plugin_folder_to_folder'
      - 'infra/packer'
      - '.github/workflows/cdr-plugin.yml'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-ami-ova:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it  
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    # build artifact
    - name: Setup Packer
      run: |
        curl -o packer.zip https://releases.hashicorp.com/packer/1.6.6/packer_1.6.6_linux_amd64.zip
        unzip -o packer.zip
        sudo mv packer /usr/local/bin
        
    - name: Build AMI/OVA
      run: |
        cd infra/packer
        REF=${{ github.ref }}
        cat > setup/env <<EOF
        SSH_PASSWORD=${{ secrets.SSH_PASSWORD }}
        GW_SDK_ADDRESS=${{ github.event.inputs.gw_sdk_address }}
        BRANCH=$( echo $REF | cut -d"/" -f3)
        GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
        EOF
        sed -i 's/<vm_name>/cdr-plugin/g' ova-export.json
        RANDOM_STR=${{ github.sha }}-${{ github.run_number }}
        packer build -color=false -on-error=cleanup -var github_sha=$RANDOM_STR -var vm_name=cdr-plugin -var create_ova=${{ github.event.inputs.create_ova }} -var region=${{ env.AWS_DEFAULT_REGION }} -var extra_regions=${{ github.event.inputs.extra_regions }} -var aws_access_key=${{ secrets.AWS_ACCESS_KEY }} -var aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} -var elastic_host=${{ github.event.inputs.monitoring_ip }} -var elastic_port=9200 -var elastic_user=${{ secrets.MONITORING_USER }} -var elastic_password=${{ secrets.MONITORING_PASSWORD }} -var team_tag=k8-proxy -var owner_tag=githubactionAMIpacker aws-ami.json
